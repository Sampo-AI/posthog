#
# `docker-compose` file used ONLY for hobby deployments.
#
# Please take a look at https://posthog.com/docs/self-host/deploy/hobby
# for more info.
#
# PostHog has sunset support for self-hosted K8s deployments.
# See: https://posthog.com/blog/sunsetting-helm-support-posthog
#

services:
    db:
        extends:
            file: docker-compose.base.yml
            service: db
        # Pin to postgres 12 until we have a process for pg_upgrade to postgres 15 for exsisting installations
        image: ${DOCKER_REGISTRY_PREFIX:-}postgres:12-alpine
        volumes:
            - postgres-data:/var/lib/postgresql/data

    redis:
        extends:
            file: docker-compose.base.yml
            service: redis
        volumes:
            - redis-data:/data

    redis7:
        extends:
            file: docker-compose.base.yml
            service: redis7
        volumes:
            - redis7-data:/data

    zookeeper:
        extends:
            file: docker-compose.base.yml
            service: zookeeper
        volumes:
            - zookeeper-datalog:/datalog
            - zookeeper-data:/data
            - zookeeper-logs:/logs
    kafka:
        extends:
            file: docker-compose.base.yml
            service: kafka
        depends_on:
            - zookeeper
        environment:
            KAFKA_LOG_RETENTION_MS: 3600000
            KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
            KAFKA_LOG_RETENTION_HOURS: 1
        volumes:
            - kafka-data:/bitnami/kafka

    worker:
        extends:
            file: docker-compose.base.yml
            service: worker
        environment:
            SENTRY_DSN: $SENTRY_DSN
            SITE_URL: https://$DOMAIN
            SECRET_KEY: $POSTHOG_SECRET
            OBJECT_STORAGE_ACCESS_KEY_ID: 'object_storage_root_user'
            OBJECT_STORAGE_SECRET_ACCESS_KEY: 'object_storage_root_password'
            OBJECT_STORAGE_ENDPOINT: http://objectstorage:19000
            OBJECT_STORAGE_ENABLED: true
            ENCRYPTION_SALT_KEYS: $ENCRYPTION_SALT_KEYS
            CLICKHOUSE_USER: admin
            CLICKHOUSE_PASSWORD: $CLICKHOUSE_PASSWORD
            CLICKHOUSE_HOST: $CLICKHOUSE_HOST
            CLICKHOUSE_SECURE: 'true'
        image: $REGISTRY_URL:$POSTHOG_APP_TAG
    web:
        extends:
            file: docker-compose.base.yml
            service: web
        command: /compose/start
        volumes:
            - ./compose:/compose
            - ./posthog/posthog/models/event/sql.py:/code/posthog/models/event/sql.py
        image: $REGISTRY_URL:$POSTHOG_APP_TAG
        environment:
            SENTRY_DSN: $SENTRY_DSN
            SITE_URL: https://$DOMAIN
            SECRET_KEY: $POSTHOG_SECRET
            OBJECT_STORAGE_ACCESS_KEY_ID: 'object_storage_root_user'
            OBJECT_STORAGE_SECRET_ACCESS_KEY: 'object_storage_root_password'
            OBJECT_STORAGE_ENDPOINT: http://objectstorage:19000
            OBJECT_STORAGE_ENABLED: true
            ENCRYPTION_SALT_KEYS: $ENCRYPTION_SALT_KEYS
            CLICKHOUSE_USER: admin
            CLICKHOUSE_PASSWORD: $CLICKHOUSE_PASSWORD
            CLICKHOUSE_HOST: $CLICKHOUSE_HOST
            CLICKHOUSE_SECURE: 'true'
            TRUST_ALL_PROXIES: true
            CORS_ALLOW_ALL_ORIGINS: true
        depends_on:
            - db
            - redis
            - kafka
            - objectstorage

    property-defs-rs:
        extends:
            file: docker-compose.base.yml
            service: property-defs-rs
        depends_on:
            - kafka

    plugins:
        extends:
            file: docker-compose.base.yml
            service: plugins
        image: $REGISTRY_URL:$POSTHOG_APP_TAG
        environment:
            SENTRY_DSN: $SENTRY_DSN
            SITE_URL: https://$DOMAIN
            SECRET_KEY: $POSTHOG_SECRET
            OBJECT_STORAGE_ACCESS_KEY_ID: 'object_storage_root_user'
            OBJECT_STORAGE_SECRET_ACCESS_KEY: 'object_storage_root_password'
            OBJECT_STORAGE_ENDPOINT: http://objectstorage:19000
            OBJECT_STORAGE_ENABLED: true
            CDP_REDIS_HOST: redis7
            CDP_REDIS_PORT: 6379
            ENCRYPTION_SALT_KEYS: $ENCRYPTION_SALT_KEYS
            CLICKHOUSE_USER: admin
            CLICKHOUSE_PASSWORD: $CLICKHOUSE_PASSWORD
            CLICKHOUSE_HOST: $CLICKHOUSE_HOST
            CLICKHOUSE_SECURE: 'true'
        depends_on:
            - db
            - redis
            - redis7
            - kafka
            - objectstorage

    caddy:
        image: caddy:2.6.1
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - caddy-data:/data
            - caddy-config:/config
        depends_on:
            - web
    objectstorage:
        extends:
            file: docker-compose.base.yml
            service: objectstorage
        restart: on-failure
        volumes:
            - objectstorage:/data
        ports:
            - '19000:19000'
            - '19001:19001'

    asyncmigrationscheck:
        extends:
            file: docker-compose.base.yml
            service: asyncmigrationscheck
        image: $REGISTRY_URL:$POSTHOG_APP_TAG
        environment:
            SENTRY_DSN: $SENTRY_DSN
            SITE_URL: https://$DOMAIN
            SECRET_KEY: $POSTHOG_SECRET
            SKIP_ASYNC_MIGRATIONS_SETUP: 0

    # Temporal containers
    temporal:
        extends:
            file: docker-compose.base.yml
            service: temporal
        environment:
            - ENABLE_ES=false
        ports:
            - 7233:7233
        volumes:
            - ./posthog/docker/temporal/dynamicconfig:/etc/temporal/config/dynamicconfig
    elasticsearch:
        extends:
            file: docker-compose.base.yml
            service: elasticsearch
    temporal-admin-tools:
        extends:
            file: docker-compose.base.yml
            service: temporal-admin-tools
        depends_on:
            - temporal
    temporal-ui:
        extends:
            file: docker-compose.base.yml
            service: temporal-ui
        ports:
            - 8081:8080
        depends_on:
            temporal:
                condition: service_started
            db:
                condition: service_healthy
    temporal-django-worker:
        command: /compose/temporal-django-worker
        extends:
            file: docker-compose.base.yml
            service: temporal-django-worker
        volumes:
            - ./compose:/compose
        image: $REGISTRY_URL:$POSTHOG_APP_TAG
        environment:
            SENTRY_DSN: $SENTRY_DSN
            SITE_URL: https://$DOMAIN
            SECRET_KEY: $POSTHOG_SECRET
        depends_on:
            - db
            - redis
            - kafka
            - objectstorage
            - temporal

volumes:
    zookeeper-data:
    zookeeper-datalog:
    zookeeper-logs:
    objectstorage:
    postgres-data:
    caddy-data:
    caddy-config:
    redis-data:
    redis7-data:
    kafka-data:
